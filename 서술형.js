// 서술형은 각 문제 아래에 서술할 것.
// 1. 동기와 비동기 처리에 대하여 설명하라.
//    동기 : 요청을 보냈을 때 응답이 돌아와야 다음 요청을 처리할 수 있는 동작
//    비동기 : 요청을 보냈을 때 응답에 상관없이 다음 요청을 처리할 수 있는 동작

// 2. 싱글 스레드와 멀티 스레드에 대하여 설명하라.
//    싱글 스레드 : 하나의 프로세스에 하나의 스레드 (자원 접근에 대한 동기화가 필요없다)
//    멀티 스레드 : 하나의 프로세스에 여러개의 스레드 (프로세스 내에서 자원 공유가 가능하여 요청을 효율적으로 처리가 가능)

// 3. 쿠키와 세션, 로컬저장소의 차이점에 대하여 설명하라.
// 	  쿠키는 client 측에 저장되고 브라우저가 종료 되어도 삭제 되지 않으며 유효기간이 존재한다.
// 	  세션은 쿠키를 기반으로 하지만,  server 측에 저장되고 브라우저가 종료되는 순간 삭제 된다.
// 	  보안은 쿠키보다 세션이 좋다. 그 이유는 사용자 정보를 세션은 server에서 관리하기 때문이다.
// 	  로컬저장소는 사용자 정보를 client 측에 저장하며 정보를 삭제 하지 않는 이상 영구적이다.

// 4. 콜백지옥이 무엇이고 이것을 해결하기 위한 방안은 무엇인지 설명하라.
//    콜백지옥 : 함수의 매개변수로 넘겨지는 콜백함수가 반복되어 들여쓰기가 심해져 가독성이 떨어짐
//    해결방안 : promise 및 async & await 및 try 사용

// 5. Node.js 이벤트 큐 동작원리에 대하여 설명하라.
//    Stack에 이벤트가 순서대로 실행
//    중간중간 Ajax , DOM , setTimeout 은 백그라운드에서 대기하여 비동기로 동작
//    Ajax , Dom , setTimeout 은 stack이 비어질때까지 큐에서 대기
//    Stack이 비면 순서대로 큐에서 대기하고 있던 이벤트 실행

// 6. GET, POST 방식에 대하여 설명하라.
//    GET : client에서 server로부터 어떤 정보를 요청하기 위한 메서드
//    POST : client에서 server로 정보를 생성하거나 업데이트하기 위해 데이터를 보내기 위한 메서드

// 7. 자바스크립트의 배열이 실제 자료구조 배열이 아닌데 그 이유는 무엇인가?
//    실제 자료구조 배열은 동일한 크기의 메모리가 빈틈없이 연속적으로 나열된 구조
//    자바스크립트 배열은 일반적인 배열을 흉내낸 객체 이며, 데이터의 크기가 같지 않아도 되며 , 연속적으로 이어지지 않아도 된다.

// 8. http와 https의 차이점은 무엇인가?
// 	  SSL(보안 소켓 계층) 사용 여부이다.
// 	  SSL은 서버와 브라우저 사이에 암호화된 연결을 만들도록 도와주고, 서버와 브라우저 사이에 민감한 정보를 주고 	받을때 도난을 방지한다.

// 9. 브라우저 렌더링 과정에 대하여 설명하라.
//    HTML 파일과 CSS 파일을 파싱해서 각각 Tree를 만든다.
//    두 Tree를 결합하여 Rendering Tree를 만든다
//    Rendering Tree에서 각 노드의 위치와 크기를 계산한다
//    계산된 값을 이용해 각 노드를 화면상의 실제 픽셀로 변환하고, 레이어를 만든다.
//    레이어를 합성하여 실제 화면에 나타낸다.

// 10. 호이스팅이 무엇인지 서술하라.
// 	  선언 된적이 없는 것을 참조하려고 할때 , 상단으로 올리는 것
